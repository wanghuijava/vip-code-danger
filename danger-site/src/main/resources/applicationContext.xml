<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"

	xsi:schemaLocation="http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
          http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context-3.1.xsd   
          http://www.springframework.org/schema/aop   
          http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
          http://www.springframework.org/schema/tx    
          http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
          http://www.springframework.org/schema/data/jpa
          http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.gsafety.starscream.site" />

	<!-- properties配置 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 数据源配置 -->
				<value>classpath*:jdbc.properties</value>
				<!-- memcached配置 -->
				<value>classpath*:memcached.properties</value>
			</list>
		</property>
	</bean>

	<!-- 池数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	
		<property name="driverClass" value="${DriverClassName}" />
		<property name="jdbcUrl" value="${URL}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="${jpa.minPoolSize}" />
		<!--连接池中保留的最大连接数。 -->
		<property name="maxPoolSize" value="${jpa.maxPoolSize}" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。-->
		<property name="initialPoolSize" value="${jpa.initialPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${jpa.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${jpa.acquireIncrement}" />
		
		<property name="maxStatements" value="${jpa.maxStatements}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${jpa.idleConnectionTestPeriod}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${jpa.acquireRetryAttempts}" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="${jpa.breakAfterAcquireFailure}" />
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="${jpa.testConnectionOnCheckout}" />
	</bean>
	
	<!-- JDBC模版配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- JPA entityManagerFactory 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 实体扫描 com.gsafety.starscream.模块.model -->
		<property name="packagesToScan" value="com.gsafety.starscream.*.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<!-- JPA 实现hibernate的配置 -->
				<prop key="hibernate.dialect">${jpa.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jpa.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${jpa.show_sql}</prop> 
				<prop key="hibernate.format_sql">${jpa.format_sql}</prop>
			</props>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 启用 annotation事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置Spring Data JPA扫描目录 com.gsafety.starscream.模块.repository -->
	<jpa:repositories base-package="com.gsafety.starscream.*.repository"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager">
	</jpa:repositories>
	
</beans>